<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c813bf21-eb97-4f14-a102-5d24fc997244" name="Changes" comment="Add initial implementation of server-client structure&#10;&#10;Introduced foundational classes, including `Request`, `Response`, and `Command` interfaces for handling client-server communication. Implemented basic commands such as `show`, `insert`, and `help`, along with a manager for command execution. Added Maven configuration and initial collection management functionality." />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/Dani4ka247/Lab_6",
    "accountId": "ecfab24a-8bf0-4e01-906b-832e23902161"
  }
}]]></component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2wGIkIxc1LRuj4a2wUUACepfbQP" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.ClientMain.executor": "Run",
    "Application.Main (1).executor": "Run",
    "Application.Main.executor": "Run",
    "Application.ServerMain.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/mac/IdeaProjects/VehicleSystem/server/src/main/java/com/vehicle",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "ml.llm.AIAssistantPromptsLibrary"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/server/src/main/java/com/vehicle" />
      <recent name="$PROJECT_DIR$/server/src/main/java" />
      <recent name="$PROJECT_DIR$/shared/src/main/java" />
    </key>
  </component>
  <component name="RunManager" selected="Application.ServerMain">
    <configuration name="ClientMain" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.vehicle.ClientMain" />
      <module name="client" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.vehicle.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ServerMain" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.vehicle.ServerMain" />
      <module name="server" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.vehicle.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ClientMain" />
        <item itemvalue="Application.ServerMain" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c813bf21-eb97-4f14-a102-5d24fc997244" name="Changes" comment="" />
      <created>1745661624198</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1745661624198</updated>
    </task>
    <task id="LOCAL-00001" summary="Add initial implementation of server-client structure&#10;&#10;Introduced foundational classes, including `Request`, `Response`, and `Command` interfaces for handling client-server communication. Implemented basic commands such as `show`, `insert`, and `help`, along with a manager for command execution. Added Maven configuration and initial collection management functionality.">
      <option name="closed" value="true" />
      <created>1745881288294</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1745881288294</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Add initial server-client communication framework&#10;&#10;Implemented a basic client-server architecture with serialization. Added support for processing commands using `Request` and `Response` classes. Initialized essential components including `CommandManager`, commands (e.g., `help`, `insert`), and a `CollectionManager` for data operations." />
    <MESSAGE value="Add initial implementation of server-client structure&#10;&#10;Introduced foundational classes, including `Request`, `Response`, and `Command` interfaces for handling client-server communication. Implemented basic commands such as `show`, `insert`, and `help`, along with a manager for command execution. Added Maven configuration and initial collection management functionality." />
    <option name="LAST_COMMIT_MESSAGE" value="Add initial implementation of server-client structure&#10;&#10;Introduced foundational classes, including `Request`, `Response`, and `Command` interfaces for handling client-server communication. Implemented basic commands such as `show`, `insert`, and `help`, along with a manager for command execution. Added Maven configuration and initial collection management functionality." />
  </component>
</project>